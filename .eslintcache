[{"C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\index.js":"1","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\reportWebVitals.js":"2","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\App.js":"3","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\pages\\first.js":"4","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\threedots\\ThreeDots.js":"5","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\owner\\owner.js":"6","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\avatar\\Avatar.js":"7","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\chatbot\\chatbot.js":"8","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\button\\button.js":"9","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\pages\\firstFunctionalComponent.js":"10","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\Context\\userContext.js":"11","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\Context\\botContext.js":"12","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\Context\\answerContext.js":"13"},{"size":500,"mtime":1608026829713,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1608026829725,"results":"16","hashOfConfig":"15"},{"size":3356,"mtime":1608217363700,"results":"17","hashOfConfig":"15"},{"size":11624,"mtime":1608047406237,"results":"18","hashOfConfig":"15"},{"size":283,"mtime":1608029667935,"results":"19","hashOfConfig":"15"},{"size":420,"mtime":1608047037756,"results":"20","hashOfConfig":"15"},{"size":310,"mtime":1608029467868,"results":"21","hashOfConfig":"15"},{"size":247,"mtime":1608029856255,"results":"22","hashOfConfig":"15"},{"size":2503,"mtime":1608221147171,"results":"23","hashOfConfig":"15"},{"size":9847,"mtime":1608221243931,"results":"24","hashOfConfig":"15"},{"size":111,"mtime":1608216892898,"results":"25","hashOfConfig":"15"},{"size":109,"mtime":1608216825596,"results":"26","hashOfConfig":"15"},{"size":115,"mtime":1608216776497,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1xata3y",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\index.js",[],["59","60"],"C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\reportWebVitals.js",[],"C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\App.js",["61","62","63","64","65","66","67","68","69","70","71","72"],"import React, { FunctionComponent, useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/pages/first\";\r\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\r\nimport AlertTemplate from \"react-alert-template-basic\";\r\n// import First from \"./components/pages/first\";\r\nimport UserContext from \"./Context/userContext\";\r\nimport BotContext from \"./Context/botContext\";\r\nimport AnswerContext from \"./Context/answerContext\";\r\nimport First from \"./components/pages/firstFunctionalComponent\";\r\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\r\n\r\nfunction App() {\r\n  const [author, setAuthor] = useState({\r\n    name: \"Henry\",\r\n    about: \"TRANSFER SPECIALIST\"\r\n  });\r\n\r\n  const bot = [\r\n    {\r\n      type: 1,\r\n      message: \"Hi! I'm Henry, your personal transfer specialist.\",\r\n      question: 1\r\n    },\r\n    {\r\n      type: 1,\r\n      message:\r\n        \"Nice work deciding to consolidate your retirement accounts. Choosing the right account can be hard. Luckily, I'm here to help!\",\r\n      question: 1\r\n    },\r\n    {\r\n      type: 1,\r\n      message:\r\n        \"Tell me, do you have at least 6 months of personal savings outside of your retirement accounts?\",\r\n      question: 2\r\n    },\r\n    {\r\n      type: 1,\r\n      message:\r\n        \"Some retirement plans allow you to take out loans. Is this feature important to you?\",\r\n      question: 2\r\n    },\r\n\r\n    {\r\n      type: 1,\r\n      message: \"There are 2 types of investors:\",\r\n      question: 1\r\n    },\r\n    {\r\n      type: 1,\r\n      message:\r\n        \"Active investors prefer to frequently monitor their investment choices, adjust allocations, and follow the market.\",\r\n      question: 1\r\n    },\r\n    {\r\n      type: 1,\r\n      message:\r\n        \"Passive investors like their investments to be managed for them.\",\r\n      question: 1\r\n    },\r\n    {\r\n      type: 1,\r\n      message: \"Which one best describes you?\",\r\n      question: 2\r\n    },\r\n    {\r\n      type: 1,\r\n      message:\r\n        \"We are required by your provider to collect some identity information.\",\r\n      question: 1\r\n    },\r\n    {\r\n      type: 1,\r\n      message: \"What is your Date of Birth?\",\r\n      question: 2\r\n    },\r\n    {\r\n      type: 1,\r\n      message:\r\n        \"Thank you for walking me through your preferences, this will make it much easier for us to choose the right destination for you.\",\r\n      question: 1\r\n    }\r\n  ];\r\n\r\n  const answer = [\r\n    {\r\n      type: 2,\r\n      btnText: [\"Yes\", \"No\"],\r\n      message: [\"Yes I do\", \"No I am not.\"]\r\n    },\r\n    {\r\n      type: 2,\r\n      btnText: [\"Yes\", \"Not Really\"],\r\n      message: [\"Yes I do\", \"Not really\"]\r\n    },\r\n    {\r\n      type: 2,\r\n      btnText: [\"Active\", \"Passive\"],\r\n      message: [\"Active\", \"Passive\"]\r\n    },\r\n    {\r\n      type: 2,\r\n      btnText: [\"Confirm\"],\r\n      message: [\"Calendar\"]\r\n    },\r\n    {\r\n      type: 2,\r\n      btnText: [\"Continue\"],\r\n      message: [\"Continue\"]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <UserContext.Provider value={author}>\r\n      <ToastProvider>\r\n        <BotContext.Provider value={bot}>\r\n          <AnswerContext.Provider value={answer}>\r\n            <First />\r\n          </AnswerContext.Provider>\r\n        </BotContext.Provider>\r\n      </ToastProvider>\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\pages\\first.js",["73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92"],"import React, { FunctionComponent, useEffect } from \"react\";\r\n\r\nimport \"./common.css\";\r\nimport ThreeDots from \"../threedots/ThreeDots\";\r\nimport Avatar from \"../avatar/Avatar\";\r\nimport ChatBot from \"../chatbot/chatbot\";\r\nimport Owner from \"../owner/owner\";\r\n// import DatePicker from 'react-mobile-datepicker';\r\nimport Button from \"../button/button\";\r\n// // import Hamburger from \"/asset/hamburger.png\"\r\n// import {NotificationContainer, NotificationManager} from 'react-notifications';\r\n// import   Toasts  from 'react-toast-notifications'\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst bot = [\r\n  {\r\n    type: 1,\r\n    message: \"Hi! I'm Henry, your personal transfer specialist.\",\r\n    question: 1\r\n  },\r\n  {\r\n    type: 1,\r\n    message:\r\n      \"Nice work deciding to consolidate your retirement accounts. Choosing the right account can be hard. Luckily, I'm here to help!\",\r\n    question: 1\r\n  },\r\n  {\r\n    type: 1,\r\n    message:\r\n      \"Tell me, do you have at least 6 months of personal savings outside of your retirement accounts?\",\r\n    question: 2\r\n  },\r\n  {\r\n    type: 1,\r\n    message:\r\n      \"Some retirement plans allow you to take out loans. Is this feature important to you?\",\r\n    question: 2\r\n  },\r\n\r\n  {\r\n    type: 1,\r\n    message: \"There are 2 types of investors:\",\r\n    question: 1\r\n  },\r\n  {\r\n    type: 1,\r\n    message:\r\n      \"Active investors prefer to frequently monitor their investment choices, adjust allocations, and follow the market.\",\r\n    question: 1\r\n  },\r\n  {\r\n    type: 1,\r\n    message: \"Passive investors like their investments to be managed for them.\",\r\n    question: 1\r\n  },\r\n  {\r\n    type: 1,\r\n    message: \"Which one best describes you?\",\r\n    question: 2\r\n  },\r\n  {\r\n    type: 1,\r\n    message:\r\n      \"We are required by your provider to collect some identity information.\",\r\n    question: 1\r\n  },\r\n  {\r\n    type: 1,\r\n    message: \"What is your Date of Birth?\",\r\n    question: 2\r\n  },\r\n  {\r\n    type: 1,\r\n    message:\r\n      \"Thank you for walking me through your preferences, this will make it much easier for us to choose the right destination for you.\",\r\n    question: 1\r\n  }\r\n];\r\nconst answer = [\r\n  {\r\n    type: 2,\r\n    btnText: [\"Yes\", \"No\"],\r\n    message: [\"Yes I do\", \"No I am not.\"]\r\n  },\r\n  {\r\n    type: 2,\r\n    btnText: [\"Yes\", \"Not Really\"],\r\n    message: [\"Yes I do\", \"Not really\"]\r\n  },\r\n  {\r\n    type: 2,\r\n    btnText: [\"Active\", \"Passive\"],\r\n    message: [\"Active\", \"Passive\"]\r\n  },\r\n  {\r\n    type: 2,\r\n    btnText: [\"Confirm\"],\r\n    message: [\"Calendar\"]\r\n  },\r\n  {\r\n    type: 2,\r\n    btnText: [\"Continue\"],\r\n    message: [\"Continue\"]\r\n  }\r\n];\r\n\r\nclass First extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      his: [],\r\n      questionNum: -1,\r\n      typing: false,\r\n      chatNum: 0,\r\n      answerNum: 0,\r\n      questionPoint: 1,\r\n      hisNum: 0,\r\n      ownerFlag: 0,\r\n      toggle: true,\r\n      message: null\r\n    };\r\n    this.chatStart = this.chatStart.bind(this);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.chatStart();\r\n    this.scrollToBottom();\r\n  };\r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n  scrollToBottom = () => {\r\n    this.el.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\r\n  };\r\n  chatStart = () => {\r\n    setTimeout(() => {\r\n      this.setState({ message: null });\r\n    }, 2000);\r\n    this.setState({ typing: true });\r\n    setTimeout(() => {\r\n      if (bot[this.state.chatNum] && this.state.toggle) {\r\n        let msg = this.state.his;\r\n        msg.push(bot[this.state.chatNum]);\r\n        this.setState({ his: msg });\r\n        if (this.state.questionNum > 4) {\r\n          this.setState({ questionNum: -1 });\r\n        }\r\n        if (bot[this.state.chatNum].question == 2) {\r\n          this.setState({\r\n            questionNum: this.state.questionNum + this.state.questionPoint,\r\n            chatNum: this.state.chatNum + 1,\r\n            hisNum: this.state.hisNum + 1,\r\n            typing: false,\r\n            toggle: false\r\n          });\r\n        } else {\r\n          this.setState({\r\n            chatNum: this.state.chatNum + 1,\r\n            hisNum: this.state.hisNum + 1,\r\n            typing: true\r\n          });\r\n          this.chatStart();\r\n        }\r\n      } else {\r\n        if (this.state.questionNum > 4) {\r\n          this.setState({ questionNum: -1 });\r\n        } else {\r\n          this.setState({ typing: false, questionNum: 4 });\r\n          return false;\r\n        }\r\n      }\r\n    }, 1500);\r\n  };\r\n  restartChat = () => {\r\n    if (this.state.toggle == true) return false;\r\n    else {\r\n      this.setState({\r\n        his: [],\r\n        questionNum: -1,\r\n        chatNum: 0,\r\n        answerNum: 0,\r\n        questionPoint: 1,\r\n        hisNum: 0,\r\n        message: 0,\r\n        toggle: true\r\n      });\r\n      this.chatStart();\r\n    }\r\n  };\r\n  onClickAnswer = value => {\r\n    switch (this.state.questionNum) {\r\n      case 0:\r\n        if (value == \"Yes\") {\r\n          this.setState({\r\n            questionPoint: this.state.questionPoint + 1,\r\n            typing: false\r\n          });\r\n          this.makingAnswerHis(0, 0);\r\n        } else {\r\n          this.setState({\r\n            questionPoint: this.state.questionPoint + 1,\r\n            typing: false\r\n          });\r\n          this.makingAnswerHis(0, 1);\r\n        }\r\n        break;\r\n      case 1:\r\n        if (value == \"Yes\") {\r\n          this.setState({\r\n            questionPoint: this.state.questionPoint + 1,\r\n            typing: false\r\n          });\r\n          this.makingAnswerHis(1, 0);\r\n        } else {\r\n          this.setState({\r\n            questionPoint: this.state.questionPoint + 1,\r\n            typing: false\r\n          });\r\n          this.makingAnswerHis(1, 1);\r\n        }\r\n        break;\r\n      case 2:\r\n        if (value == \"Active\") {\r\n          this.setState({\r\n            questionPoint: this.state.questionPoint + 1,\r\n            typing: false\r\n          });\r\n          this.makingAnswerHis(2, 0);\r\n        } else {\r\n          this.setState({\r\n            questionPoint: this.state.questionPoint + 1,\r\n            typing: false\r\n          });\r\n          this.makingAnswerHis(2, 1);\r\n        }\r\n        break;\r\n      case 3:\r\n        this.setState({\r\n          questionPoint: this.state.questionPoint + 1,\r\n          typing: false\r\n        });\r\n        this.makingAnswerHis(3, value);\r\n        break;\r\n      case 4:\r\n        this.chatStart();\r\n        this.setState({\r\n          his: [],\r\n          questionNum: -1,\r\n          chatNum: 0,\r\n          answerNum: 0,\r\n          questionPoint: 1,\r\n          hisNum: 0,\r\n          toggle: true\r\n        });\r\n\r\n        break;\r\n    }\r\n  };\r\n  makingAnswerHis = (firstParam, secondParam) => {\r\n    if (firstParam == 3) {\r\n      let mg = this.state.his;\r\n      let newAnswer = { type: 2, message: secondParam };\r\n      mg.push(newAnswer);\r\n      this.setState({\r\n        his: mg,\r\n        questionNum: -1,\r\n        hisNum: this.state.hisNum + 1,\r\n        typing: true,\r\n        toggle: true\r\n      });\r\n    } else {\r\n      let mg = this.state.his;\r\n      let newAnswer = {\r\n        type: 2,\r\n        message: answer[firstParam].message[secondParam]\r\n      };\r\n      mg.push(newAnswer);\r\n      this.setState({\r\n        his: mg,\r\n        questionNum: -1,\r\n        hisNum: this.state.hisNum + 1,\r\n        typing: true,\r\n        toggle: true\r\n      });\r\n    }\r\n    this.chatStart();\r\n    console.log(this.state.his);\r\n  };\r\n  onClickImage = num => {\r\n    if (this.state.toggle == true) return false;\r\n    let mg = this.state.his;\r\n    let newArray = mg.slice(0, num * 1);\r\n    if (num == 3)\r\n      this.setState({\r\n        questionNum: 0,\r\n        chatNum: 3,\r\n        answerNum: 0,\r\n        questionPoint: 1,\r\n        hisNum: 2\r\n      });\r\n    else if (num == 5)\r\n      this.setState({\r\n        questionNum: 1,\r\n        chatNum: 4,\r\n        answerNum: 1,\r\n        questionPoint: 2,\r\n        hisNum: 4\r\n      });\r\n    else if (num == 10)\r\n      this.setState({\r\n        questionNum: 2,\r\n        chatNum: 8,\r\n        answerNum: 2,\r\n        questionPoint: 3,\r\n        hisNum: 9\r\n      });\r\n    else if (num == 13)\r\n      this.setState({\r\n        questionNum: 3,\r\n        chatNum: 12,\r\n        answerNum: 3,\r\n        questionPoint: 4,\r\n        hisNum: 12\r\n      });\r\n    this.setState({\r\n      his: newArray,\r\n      toggle: true,\r\n      message: 1\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({ message: null });\r\n    }, 2000);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          {this.state.message == 0 ? (\r\n            <Alert\r\n              style={{ position: \"fixed\", right: 10, top: 120, zIndex: 2 }}\r\n              severity=\"info\"\r\n            >\r\n              Chat experience will restart.\r\n            </Alert>\r\n          ) : null}\r\n          {this.state.message == 1 ? (\r\n            <Alert\r\n              style={{ position: \"fixed\", right: 10, top: 120, zIndex: 2 }}\r\n              severity=\"info\"\r\n            >\r\n              Reselect your answer.\r\n            </Alert>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"middle-flex\">\r\n          <div className=\"header-menu\">\r\n            <div className=\"header-content\">\r\n              <label>Manifest</label>\r\n            </div>\r\n            <img\r\n              src=\"/asset/img/hamburger.png\"\r\n              onClick={this.restartChat}\r\n              className=\"hamburger-icon\"\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"main-container\"\r\n            ref={el => {\r\n              this.el = el;\r\n            }}\r\n          >\r\n            <div className=\"middle-container\">\r\n              <ul className=\"center-ul\">\r\n                <li className=\"avatar-list\">\r\n                  <img src=\"/asset/img/henry.png\" className=\"henry-avatar\" />\r\n                </li>\r\n                <li className=\"henry-name\">\r\n                  <label>Henry</label>\r\n                </li>\r\n                <li className=\"henry-reception\">\r\n                  <label>TRANSFER SPECIALIST</label>\r\n                </li>\r\n              </ul>\r\n\r\n              <div className=\"message-content\">\r\n                {this.state.his.map((msg, index) => {\r\n                  // let ownerFlag = this.state.answerType.length -1;\r\n                  if (msg) {\r\n                    if (msg.type == 1) {\r\n                      return (\r\n                        <div style={{ display: \"flex\" }}>\r\n                          <Avatar />\r\n                          <ChatBot message={msg.message} />\r\n                        </div>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <Owner\r\n                          onClickImage={this.onClickImage}\r\n                          values={index}\r\n                          message={msg.message}\r\n                        />\r\n                      );\r\n                    }\r\n                  } else return false;\r\n                })}\r\n                {this.state.typing ? (\r\n                  <div className=\"three-dots\">\r\n                    {\" \"}\r\n                    <ThreeDots />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            {answer.map((item, index) => {\r\n              return (\r\n                <Button\r\n                  message={item.btnText}\r\n                  onClickAnswer={this.onClickAnswer}\r\n                  dispFlag={this.state.questionNum == index ? \"block\" : \"none\"}\r\n                />\r\n              );\r\n            })}\r\n            {/* <Button message = {btn}/> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"right-flex\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default First;\r\n","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\threedots\\ThreeDots.js",[],"C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\owner\\owner.js",["93"],"import React from \"react\";\r\nimport \"./owner.css\";\r\n\r\nconst Owner = props => {\r\n  return (\r\n    <div>\r\n      <div className=\"owner-container\">\r\n        <img\r\n          className=\"owner-edit\"\r\n          onClick={() => props.onClickImage(props.values)}\r\n          src=\"/asset/img/pencil.png\"\r\n        />\r\n        <p className=\"owner-answer\">{props.message}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Owner;\r\n","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\avatar\\Avatar.js",["94"],"import React from \"react\";\r\nimport \"./avatar.css\";\r\n\r\nconst Avatar = props => {\r\n  return (\r\n    <div style={{ display: props.dispFlag }}>\r\n      <img\r\n        src=\"/asset/img/henry.png\"\r\n        className=\"henry-avatar-s\"\r\n        alt=\"Avatar Image\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\chatbot\\chatbot.js",[],"C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\button\\button.js",["95","96","97","98","99","100"],"C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\pages\\firstFunctionalComponent.js",["101","102","103","104","105"],"C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\Context\\userContext.js",[],"C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\Context\\botContext.js",[],"C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\Context\\answerContext.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":34},{"ruleId":"110","severity":1,"message":"114","line":1,"column":36,"nodeType":"112","messageId":"113","endLine":1,"endColumn":45},{"ruleId":"110","severity":1,"message":"115","line":2,"column":27,"nodeType":"112","messageId":"113","endLine":2,"endColumn":33},{"ruleId":"110","severity":1,"message":"116","line":2,"column":35,"nodeType":"112","messageId":"113","endLine":2,"endColumn":40},{"ruleId":"110","severity":1,"message":"117","line":2,"column":42,"nodeType":"112","messageId":"113","endLine":2,"endColumn":48},{"ruleId":"110","severity":1,"message":"118","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":12},{"ruleId":"110","severity":1,"message":"119","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":21},{"ruleId":"110","severity":1,"message":"120","line":4,"column":23,"nodeType":"112","messageId":"113","endLine":4,"endColumn":32},{"ruleId":"110","severity":1,"message":"121","line":4,"column":46,"nodeType":"112","messageId":"113","endLine":4,"endColumn":59},{"ruleId":"110","severity":1,"message":"122","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":21},{"ruleId":"110","severity":1,"message":"123","line":11,"column":25,"nodeType":"112","messageId":"113","endLine":11,"endColumn":34},{"ruleId":"110","severity":1,"message":"124","line":14,"column":18,"nodeType":"112","messageId":"113","endLine":14,"endColumn":27},{"ruleId":"110","severity":1,"message":"111","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":34},{"ruleId":"110","severity":1,"message":"114","line":1,"column":36,"nodeType":"112","messageId":"113","endLine":1,"endColumn":45},{"ruleId":"125","severity":1,"message":"126","line":148,"column":46,"nodeType":"127","messageId":"128","endLine":148,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":175,"column":27,"nodeType":"127","messageId":"128","endLine":175,"endColumn":29},{"ruleId":"129","severity":1,"message":"130","line":191,"column":5,"nodeType":"131","messageId":"132","endLine":257,"endColumn":6},{"ruleId":"125","severity":1,"message":"126","line":193,"column":19,"nodeType":"127","messageId":"128","endLine":193,"endColumn":21},{"ruleId":"125","severity":1,"message":"126","line":208,"column":19,"nodeType":"127","messageId":"128","endLine":208,"endColumn":21},{"ruleId":"125","severity":1,"message":"126","line":223,"column":19,"nodeType":"127","messageId":"128","endLine":223,"endColumn":21},{"ruleId":"125","severity":1,"message":"126","line":260,"column":20,"nodeType":"127","messageId":"128","endLine":260,"endColumn":22},{"ruleId":"125","severity":1,"message":"126","line":290,"column":27,"nodeType":"127","messageId":"128","endLine":290,"endColumn":29},{"ruleId":"125","severity":1,"message":"126","line":293,"column":13,"nodeType":"127","messageId":"128","endLine":293,"endColumn":15},{"ruleId":"125","severity":1,"message":"126","line":301,"column":18,"nodeType":"127","messageId":"128","endLine":301,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":309,"column":18,"nodeType":"127","messageId":"128","endLine":309,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":317,"column":18,"nodeType":"127","messageId":"128","endLine":317,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":339,"column":31,"nodeType":"127","messageId":"128","endLine":339,"endColumn":33},{"ruleId":"125","severity":1,"message":"126","line":347,"column":31,"nodeType":"127","messageId":"128","endLine":347,"endColumn":33},{"ruleId":"133","severity":1,"message":"134","line":361,"column":13,"nodeType":"135","endLine":365,"endColumn":15},{"ruleId":"133","severity":1,"message":"134","line":376,"column":19,"nodeType":"135","endLine":376,"endColumn":78},{"ruleId":"125","severity":1,"message":"126","line":390,"column":34,"nodeType":"127","messageId":"128","endLine":390,"endColumn":36},{"ruleId":"125","severity":1,"message":"126","line":421,"column":52,"nodeType":"127","messageId":"128","endLine":421,"endColumn":54},{"ruleId":"133","severity":1,"message":"134","line":8,"column":9,"nodeType":"135","endLine":12,"endColumn":11},{"ruleId":"136","severity":1,"message":"137","line":7,"column":7,"nodeType":"135","endLine":11,"endColumn":9},{"ruleId":"110","severity":1,"message":"114","line":1,"column":27,"nodeType":"112","messageId":"113","endLine":1,"endColumn":36},{"ruleId":"110","severity":1,"message":"138","line":6,"column":16,"nodeType":"112","messageId":"113","endLine":6,"endColumn":23},{"ruleId":"110","severity":1,"message":"139","line":7,"column":10,"nodeType":"112","messageId":"113","endLine":7,"endColumn":16},{"ruleId":"110","severity":1,"message":"140","line":7,"column":18,"nodeType":"112","messageId":"113","endLine":7,"endColumn":27},{"ruleId":"141","severity":1,"message":"142","line":19,"column":39,"nodeType":"143","messageId":"144","endLine":19,"endColumn":41},{"ruleId":"125","severity":1,"message":"126","line":20,"column":21,"nodeType":"127","messageId":"128","endLine":20,"endColumn":23},{"ruleId":"145","severity":1,"message":"146","line":40,"column":5,"nodeType":"147","endLine":40,"endColumn":51,"suggestions":"148"},{"ruleId":"129","severity":1,"message":"130","line":115,"column":5,"nodeType":"131","messageId":"132","endLine":188,"endColumn":6},{"ruleId":"110","severity":1,"message":"149","line":230,"column":9,"nodeType":"112","messageId":"113","endLine":230,"endColumn":12},{"ruleId":"133","severity":1,"message":"134","line":311,"column":11,"nodeType":"135","endLine":315,"endColumn":13},{"ruleId":"133","severity":1,"message":"134","line":321,"column":17,"nodeType":"135","endLine":321,"endColumn":76},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'FunctionComponent' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Home' is defined but never used.","'transitions' is defined but never used.","'positions' is defined but never used.","'AlertProvider' is defined but never used.","'AlertTemplate' is defined but never used.","'useToasts' is defined but never used.","'setAuthor' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'setTime' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chatStart'. Either include it or remove the dependency array.","ArrayExpression",["152"],"'ans' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},"Update the dependencies array to be: [state.chatNum, state.hisNum, state.answerNum, chatStart]",{"range":"155","text":"156"},[1091,1137],"[state.chatNum, state.hisNum, state.answerNum, chatStart]"]