[{"C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\index.js":"1","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\reportWebVitals.js":"2","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\App.js":"3","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\pages\\first.js":"4","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\threedots\\ThreeDots.js":"5","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\owner\\owner.js":"6","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\avatar\\Avatar.js":"7","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\chatbot\\chatbot.js":"8","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\button\\button.js":"9","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\pages\\firstFunctionalComponent.js":"10"},{"size":500,"mtime":1608026829713,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1608026829725,"results":"13","hashOfConfig":"12"},{"size":627,"mtime":1608160818102,"results":"14","hashOfConfig":"12"},{"size":11624,"mtime":1608047406237,"results":"15","hashOfConfig":"12"},{"size":283,"mtime":1608029667935,"results":"16","hashOfConfig":"12"},{"size":420,"mtime":1608047037756,"results":"17","hashOfConfig":"12"},{"size":310,"mtime":1608029467868,"results":"18","hashOfConfig":"12"},{"size":247,"mtime":1608029856255,"results":"19","hashOfConfig":"12"},{"size":1845,"mtime":1608047199692,"results":"20","hashOfConfig":"12"},{"size":10483,"mtime":1608160668553,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1xata3y",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\index.js",[],["47","48"],"C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\reportWebVitals.js",[],"C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\App.js",["49","50","51","52","53","54","55","56","57","58","59","60"],"C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\pages\\first.js",["61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80"],"import React, { FunctionComponent, useEffect } from \"react\";\r\n\r\nimport \"./common.css\";\r\nimport ThreeDots from \"../threedots/ThreeDots\";\r\nimport Avatar from \"../avatar/Avatar\";\r\nimport ChatBot from \"../chatbot/chatbot\";\r\nimport Owner from \"../owner/owner\";\r\n// import DatePicker from 'react-mobile-datepicker';\r\nimport Button from \"../button/button\";\r\n// // import Hamburger from \"/asset/hamburger.png\"\r\n// import {NotificationContainer, NotificationManager} from 'react-notifications';\r\n// import   Toasts  from 'react-toast-notifications'\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst bot = [\r\n  {\r\n    type: 1,\r\n    message: \"Hi! I'm Henry, your personal transfer specialist.\",\r\n    question: 1\r\n  },\r\n  {\r\n    type: 1,\r\n    message:\r\n      \"Nice work deciding to consolidate your retirement accounts. Choosing the right account can be hard. Luckily, I'm here to help!\",\r\n    question: 1\r\n  },\r\n  {\r\n    type: 1,\r\n    message:\r\n      \"Tell me, do you have at least 6 months of personal savings outside of your retirement accounts?\",\r\n    question: 2\r\n  },\r\n  {\r\n    type: 1,\r\n    message:\r\n      \"Some retirement plans allow you to take out loans. Is this feature important to you?\",\r\n    question: 2\r\n  },\r\n\r\n  {\r\n    type: 1,\r\n    message: \"There are 2 types of investors:\",\r\n    question: 1\r\n  },\r\n  {\r\n    type: 1,\r\n    message:\r\n      \"Active investors prefer to frequently monitor their investment choices, adjust allocations, and follow the market.\",\r\n    question: 1\r\n  },\r\n  {\r\n    type: 1,\r\n    message: \"Passive investors like their investments to be managed for them.\",\r\n    question: 1\r\n  },\r\n  {\r\n    type: 1,\r\n    message: \"Which one best describes you?\",\r\n    question: 2\r\n  },\r\n  {\r\n    type: 1,\r\n    message:\r\n      \"We are required by your provider to collect some identity information.\",\r\n    question: 1\r\n  },\r\n  {\r\n    type: 1,\r\n    message: \"What is your Date of Birth?\",\r\n    question: 2\r\n  },\r\n  {\r\n    type: 1,\r\n    message:\r\n      \"Thank you for walking me through your preferences, this will make it much easier for us to choose the right destination for you.\",\r\n    question: 1\r\n  }\r\n];\r\nconst answer = [\r\n  {\r\n    type: 2,\r\n    btnText: [\"Yes\", \"No\"],\r\n    message: [\"Yes I do\", \"No I am not.\"]\r\n  },\r\n  {\r\n    type: 2,\r\n    btnText: [\"Yes\", \"Not Really\"],\r\n    message: [\"Yes I do\", \"Not really\"]\r\n  },\r\n  {\r\n    type: 2,\r\n    btnText: [\"Active\", \"Passive\"],\r\n    message: [\"Active\", \"Passive\"]\r\n  },\r\n  {\r\n    type: 2,\r\n    btnText: [\"Confirm\"],\r\n    message: [\"Calendar\"]\r\n  },\r\n  {\r\n    type: 2,\r\n    btnText: [\"Continue\"],\r\n    message: [\"Continue\"]\r\n  }\r\n];\r\n\r\nclass First extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      his: [],\r\n      questionNum: -1,\r\n      typing: false,\r\n      chatNum: 0,\r\n      answerNum: 0,\r\n      questionPoint: 1,\r\n      hisNum: 0,\r\n      ownerFlag: 0,\r\n      toggle: true,\r\n      message: null\r\n    };\r\n    this.chatStart = this.chatStart.bind(this);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.chatStart();\r\n    this.scrollToBottom();\r\n  };\r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n  scrollToBottom = () => {\r\n    this.el.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\r\n  };\r\n  chatStart = () => {\r\n    setTimeout(() => {\r\n      this.setState({ message: null });\r\n    }, 2000);\r\n    this.setState({ typing: true });\r\n    setTimeout(() => {\r\n      if (bot[this.state.chatNum] && this.state.toggle) {\r\n        let msg = this.state.his;\r\n        msg.push(bot[this.state.chatNum]);\r\n        this.setState({ his: msg });\r\n        if (this.state.questionNum > 4) {\r\n          this.setState({ questionNum: -1 });\r\n        }\r\n        if (bot[this.state.chatNum].question == 2) {\r\n          this.setState({\r\n            questionNum: this.state.questionNum + this.state.questionPoint,\r\n            chatNum: this.state.chatNum + 1,\r\n            hisNum: this.state.hisNum + 1,\r\n            typing: false,\r\n            toggle: false\r\n          });\r\n        } else {\r\n          this.setState({\r\n            chatNum: this.state.chatNum + 1,\r\n            hisNum: this.state.hisNum + 1,\r\n            typing: true\r\n          });\r\n          this.chatStart();\r\n        }\r\n      } else {\r\n        if (this.state.questionNum > 4) {\r\n          this.setState({ questionNum: -1 });\r\n        } else {\r\n          this.setState({ typing: false, questionNum: 4 });\r\n          return false;\r\n        }\r\n      }\r\n    }, 1500);\r\n  };\r\n  restartChat = () => {\r\n    if (this.state.toggle == true) return false;\r\n    else {\r\n      this.setState({\r\n        his: [],\r\n        questionNum: -1,\r\n        chatNum: 0,\r\n        answerNum: 0,\r\n        questionPoint: 1,\r\n        hisNum: 0,\r\n        message: 0,\r\n        toggle: true\r\n      });\r\n      this.chatStart();\r\n    }\r\n  };\r\n  onClickAnswer = value => {\r\n    switch (this.state.questionNum) {\r\n      case 0:\r\n        if (value == \"Yes\") {\r\n          this.setState({\r\n            questionPoint: this.state.questionPoint + 1,\r\n            typing: false\r\n          });\r\n          this.makingAnswerHis(0, 0);\r\n        } else {\r\n          this.setState({\r\n            questionPoint: this.state.questionPoint + 1,\r\n            typing: false\r\n          });\r\n          this.makingAnswerHis(0, 1);\r\n        }\r\n        break;\r\n      case 1:\r\n        if (value == \"Yes\") {\r\n          this.setState({\r\n            questionPoint: this.state.questionPoint + 1,\r\n            typing: false\r\n          });\r\n          this.makingAnswerHis(1, 0);\r\n        } else {\r\n          this.setState({\r\n            questionPoint: this.state.questionPoint + 1,\r\n            typing: false\r\n          });\r\n          this.makingAnswerHis(1, 1);\r\n        }\r\n        break;\r\n      case 2:\r\n        if (value == \"Active\") {\r\n          this.setState({\r\n            questionPoint: this.state.questionPoint + 1,\r\n            typing: false\r\n          });\r\n          this.makingAnswerHis(2, 0);\r\n        } else {\r\n          this.setState({\r\n            questionPoint: this.state.questionPoint + 1,\r\n            typing: false\r\n          });\r\n          this.makingAnswerHis(2, 1);\r\n        }\r\n        break;\r\n      case 3:\r\n        this.setState({\r\n          questionPoint: this.state.questionPoint + 1,\r\n          typing: false\r\n        });\r\n        this.makingAnswerHis(3, value);\r\n        break;\r\n      case 4:\r\n        this.chatStart();\r\n        this.setState({\r\n          his: [],\r\n          questionNum: -1,\r\n          chatNum: 0,\r\n          answerNum: 0,\r\n          questionPoint: 1,\r\n          hisNum: 0,\r\n          toggle: true\r\n        });\r\n\r\n        break;\r\n    }\r\n  };\r\n  makingAnswerHis = (firstParam, secondParam) => {\r\n    if (firstParam == 3) {\r\n      let mg = this.state.his;\r\n      let newAnswer = { type: 2, message: secondParam };\r\n      mg.push(newAnswer);\r\n      this.setState({\r\n        his: mg,\r\n        questionNum: -1,\r\n        hisNum: this.state.hisNum + 1,\r\n        typing: true,\r\n        toggle: true\r\n      });\r\n    } else {\r\n      let mg = this.state.his;\r\n      let newAnswer = {\r\n        type: 2,\r\n        message: answer[firstParam].message[secondParam]\r\n      };\r\n      mg.push(newAnswer);\r\n      this.setState({\r\n        his: mg,\r\n        questionNum: -1,\r\n        hisNum: this.state.hisNum + 1,\r\n        typing: true,\r\n        toggle: true\r\n      });\r\n    }\r\n    this.chatStart();\r\n    console.log(this.state.his);\r\n  };\r\n  onClickImage = num => {\r\n    if (this.state.toggle == true) return false;\r\n    let mg = this.state.his;\r\n    let newArray = mg.slice(0, num * 1);\r\n    if (num == 3)\r\n      this.setState({\r\n        questionNum: 0,\r\n        chatNum: 3,\r\n        answerNum: 0,\r\n        questionPoint: 1,\r\n        hisNum: 2\r\n      });\r\n    else if (num == 5)\r\n      this.setState({\r\n        questionNum: 1,\r\n        chatNum: 4,\r\n        answerNum: 1,\r\n        questionPoint: 2,\r\n        hisNum: 4\r\n      });\r\n    else if (num == 10)\r\n      this.setState({\r\n        questionNum: 2,\r\n        chatNum: 8,\r\n        answerNum: 2,\r\n        questionPoint: 3,\r\n        hisNum: 9\r\n      });\r\n    else if (num == 13)\r\n      this.setState({\r\n        questionNum: 3,\r\n        chatNum: 12,\r\n        answerNum: 3,\r\n        questionPoint: 4,\r\n        hisNum: 12\r\n      });\r\n    this.setState({\r\n      his: newArray,\r\n      toggle: true,\r\n      message: 1\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({ message: null });\r\n    }, 2000);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          {this.state.message == 0 ? (\r\n            <Alert\r\n              style={{ position: \"fixed\", right: 10, top: 120, zIndex: 2 }}\r\n              severity=\"info\"\r\n            >\r\n              Chat experience will restart.\r\n            </Alert>\r\n          ) : null}\r\n          {this.state.message == 1 ? (\r\n            <Alert\r\n              style={{ position: \"fixed\", right: 10, top: 120, zIndex: 2 }}\r\n              severity=\"info\"\r\n            >\r\n              Reselect your answer.\r\n            </Alert>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"middle-flex\">\r\n          <div className=\"header-menu\">\r\n            <div className=\"header-content\">\r\n              <label>Manifest</label>\r\n            </div>\r\n            <img\r\n              src=\"/asset/img/hamburger.png\"\r\n              onClick={this.restartChat}\r\n              className=\"hamburger-icon\"\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"main-container\"\r\n            ref={el => {\r\n              this.el = el;\r\n            }}\r\n          >\r\n            <div className=\"middle-container\">\r\n              <ul className=\"center-ul\">\r\n                <li className=\"avatar-list\">\r\n                  <img src=\"/asset/img/henry.png\" className=\"henry-avatar\" />\r\n                </li>\r\n                <li className=\"henry-name\">\r\n                  <label>Henry</label>\r\n                </li>\r\n                <li className=\"henry-reception\">\r\n                  <label>TRANSFER SPECIALIST</label>\r\n                </li>\r\n              </ul>\r\n\r\n              <div className=\"message-content\">\r\n                {this.state.his.map((msg, index) => {\r\n                  // let ownerFlag = this.state.answerType.length -1;\r\n                  if (msg) {\r\n                    if (msg.type == 1) {\r\n                      return (\r\n                        <div style={{ display: \"flex\" }}>\r\n                          <Avatar />\r\n                          <ChatBot message={msg.message} />\r\n                        </div>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <Owner\r\n                          onClickImage={this.onClickImage}\r\n                          values={index}\r\n                          message={msg.message}\r\n                        />\r\n                      );\r\n                    }\r\n                  } else return false;\r\n                })}\r\n                {this.state.typing ? (\r\n                  <div className=\"three-dots\">\r\n                    {\" \"}\r\n                    <ThreeDots />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            {answer.map((item, index) => {\r\n              return (\r\n                <Button\r\n                  message={item.btnText}\r\n                  onClickAnswer={this.onClickAnswer}\r\n                  dispFlag={this.state.questionNum == index ? \"block\" : \"none\"}\r\n                />\r\n              );\r\n            })}\r\n            {/* <Button message = {btn}/> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"right-flex\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default First;\r\n","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\threedots\\ThreeDots.js",[],"C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\owner\\owner.js",["81"],"import React from \"react\";\r\nimport \"./owner.css\";\r\n\r\nconst Owner = props => {\r\n  return (\r\n    <div>\r\n      <div className=\"owner-container\">\r\n        <img\r\n          className=\"owner-edit\"\r\n          onClick={() => props.onClickImage(props.values)}\r\n          src=\"/asset/img/pencil.png\"\r\n        />\r\n        <p className=\"owner-answer\">{props.message}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Owner;\r\n","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\avatar\\Avatar.js",["82"],"import React from \"react\";\r\nimport \"./avatar.css\";\r\n\r\nconst Avatar = props => {\r\n  return (\r\n    <div style={{ display: props.dispFlag }}>\r\n      <img\r\n        src=\"/asset/img/henry.png\"\r\n        className=\"henry-avatar-s\"\r\n        alt=\"Avatar Image\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\chatbot\\chatbot.js",[],"C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\button\\button.js",["83","84","85","86"],"import React, { useState } from \"react\";\r\nimport \"./button.css\";\r\n//import DatePicker from \"react-mobile-datepicker\";\r\n\r\nconst Button = props => {\r\n  const [time, setTime] = useState(new Date());\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [date, setDate] = useState(null);\r\n\r\n  const updateData = e => {\r\n    setDate(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: props.dispFlag }}>\r\n      <div className=\"bottom-fixed\">\r\n        <div className=\"button-group\">\r\n          {props.message.map(msg => {\r\n            if (msg == \"Confirm\") {\r\n              return (\r\n                <div className=\"datepicker-button\">\r\n                  <center>\r\n                    <button\r\n                      className=\"buttons\"\r\n                      disabled={date ? null : \"disabled\"}\r\n                      onClick={() => props.onClickAnswer(date)}\r\n                    >\r\n                      Confirm\r\n                    </button>\r\n                    <input\r\n                      type=\"date\"\r\n                      defaultValue={time}\r\n                      className=\"date-picker\"\r\n                      onChange={updateData}\r\n                    />\r\n                  </center>\r\n                </div>\r\n              );\r\n            } else {\r\n              return (\r\n                <div className=\"right-button\">\r\n                  <center>\r\n                    <button\r\n                      className=\"buttons\"\r\n                      onClick={() => props.onClickAnswer(msg)}\r\n                    >\r\n                      {msg}\r\n                    </button>\r\n                  </center>\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n        <center>\r\n          <div className=\"hr-line\" />\r\n        </center>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","C:\\Users\\sidha\\OneDrive\\Desktop\\manifest\\manifest-chatting-app\\src\\components\\pages\\firstFunctionalComponent.js",["87","88","89","90","91","92","93","94","95","96","97","98","99","100","101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":34},{"ruleId":"106","severity":1,"message":"110","line":1,"column":36,"nodeType":"108","messageId":"109","endLine":1,"endColumn":45},{"ruleId":"106","severity":1,"message":"111","line":2,"column":27,"nodeType":"108","messageId":"109","endLine":2,"endColumn":33},{"ruleId":"106","severity":1,"message":"112","line":2,"column":35,"nodeType":"108","messageId":"109","endLine":2,"endColumn":40},{"ruleId":"106","severity":1,"message":"113","line":2,"column":42,"nodeType":"108","messageId":"109","endLine":2,"endColumn":48},{"ruleId":"106","severity":1,"message":"114","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":12},{"ruleId":"106","severity":1,"message":"115","line":4,"column":10,"nodeType":"108","messageId":"109","endLine":4,"endColumn":21},{"ruleId":"106","severity":1,"message":"116","line":4,"column":23,"nodeType":"108","messageId":"109","endLine":4,"endColumn":32},{"ruleId":"106","severity":1,"message":"117","line":4,"column":46,"nodeType":"108","messageId":"109","endLine":4,"endColumn":59},{"ruleId":"106","severity":1,"message":"118","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":21},{"ruleId":"106","severity":1,"message":"119","line":7,"column":8,"nodeType":"108","messageId":"109","endLine":7,"endColumn":27},{"ruleId":"106","severity":1,"message":"120","line":8,"column":25,"nodeType":"108","messageId":"109","endLine":8,"endColumn":34},{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":34},{"ruleId":"106","severity":1,"message":"110","line":1,"column":36,"nodeType":"108","messageId":"109","endLine":1,"endColumn":45},{"ruleId":"121","severity":1,"message":"122","line":148,"column":46,"nodeType":"123","messageId":"124","endLine":148,"endColumn":48},{"ruleId":"121","severity":1,"message":"122","line":175,"column":27,"nodeType":"123","messageId":"124","endLine":175,"endColumn":29},{"ruleId":"125","severity":1,"message":"126","line":191,"column":5,"nodeType":"127","messageId":"128","endLine":257,"endColumn":6},{"ruleId":"121","severity":1,"message":"122","line":193,"column":19,"nodeType":"123","messageId":"124","endLine":193,"endColumn":21},{"ruleId":"121","severity":1,"message":"122","line":208,"column":19,"nodeType":"123","messageId":"124","endLine":208,"endColumn":21},{"ruleId":"121","severity":1,"message":"122","line":223,"column":19,"nodeType":"123","messageId":"124","endLine":223,"endColumn":21},{"ruleId":"121","severity":1,"message":"122","line":260,"column":20,"nodeType":"123","messageId":"124","endLine":260,"endColumn":22},{"ruleId":"121","severity":1,"message":"122","line":290,"column":27,"nodeType":"123","messageId":"124","endLine":290,"endColumn":29},{"ruleId":"121","severity":1,"message":"122","line":293,"column":13,"nodeType":"123","messageId":"124","endLine":293,"endColumn":15},{"ruleId":"121","severity":1,"message":"122","line":301,"column":18,"nodeType":"123","messageId":"124","endLine":301,"endColumn":20},{"ruleId":"121","severity":1,"message":"122","line":309,"column":18,"nodeType":"123","messageId":"124","endLine":309,"endColumn":20},{"ruleId":"121","severity":1,"message":"122","line":317,"column":18,"nodeType":"123","messageId":"124","endLine":317,"endColumn":20},{"ruleId":"121","severity":1,"message":"122","line":339,"column":31,"nodeType":"123","messageId":"124","endLine":339,"endColumn":33},{"ruleId":"121","severity":1,"message":"122","line":347,"column":31,"nodeType":"123","messageId":"124","endLine":347,"endColumn":33},{"ruleId":"129","severity":1,"message":"130","line":361,"column":13,"nodeType":"131","endLine":365,"endColumn":15},{"ruleId":"129","severity":1,"message":"130","line":376,"column":19,"nodeType":"131","endLine":376,"endColumn":78},{"ruleId":"121","severity":1,"message":"122","line":390,"column":34,"nodeType":"123","messageId":"124","endLine":390,"endColumn":36},{"ruleId":"121","severity":1,"message":"122","line":421,"column":52,"nodeType":"123","messageId":"124","endLine":421,"endColumn":54},{"ruleId":"129","severity":1,"message":"130","line":8,"column":9,"nodeType":"131","endLine":12,"endColumn":11},{"ruleId":"132","severity":1,"message":"133","line":7,"column":7,"nodeType":"131","endLine":11,"endColumn":9},{"ruleId":"106","severity":1,"message":"134","line":6,"column":16,"nodeType":"108","messageId":"109","endLine":6,"endColumn":23},{"ruleId":"106","severity":1,"message":"135","line":7,"column":10,"nodeType":"108","messageId":"109","endLine":7,"endColumn":16},{"ruleId":"106","severity":1,"message":"136","line":7,"column":18,"nodeType":"108","messageId":"109","endLine":7,"endColumn":27},{"ruleId":"121","severity":1,"message":"122","line":19,"column":21,"nodeType":"123","messageId":"124","endLine":19,"endColumn":23},{"ruleId":"106","severity":1,"message":"137","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":25},{"ruleId":"106","severity":1,"message":"138","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":18},{"ruleId":"106","severity":1,"message":"139","line":113,"column":10,"nodeType":"108","messageId":"109","endLine":113,"endColumn":19},{"ruleId":"106","severity":1,"message":"140","line":116,"column":10,"nodeType":"108","messageId":"109","endLine":116,"endColumn":19},{"ruleId":"106","severity":1,"message":"141","line":116,"column":21,"nodeType":"108","messageId":"109","endLine":116,"endColumn":33},{"ruleId":"121","severity":1,"message":"122","line":171,"column":16,"nodeType":"123","messageId":"124","endLine":171,"endColumn":18},{"ruleId":"125","severity":1,"message":"126","line":186,"column":5,"nodeType":"127","messageId":"128","endLine":236,"endColumn":6},{"ruleId":"121","severity":1,"message":"122","line":188,"column":19,"nodeType":"123","messageId":"124","endLine":188,"endColumn":21},{"ruleId":"121","severity":1,"message":"122","line":200,"column":19,"nodeType":"123","messageId":"124","endLine":200,"endColumn":21},{"ruleId":"121","severity":1,"message":"122","line":211,"column":19,"nodeType":"123","messageId":"124","endLine":211,"endColumn":21},{"ruleId":"121","severity":1,"message":"122","line":240,"column":20,"nodeType":"123","messageId":"124","endLine":240,"endColumn":22},{"ruleId":"121","severity":1,"message":"122","line":288,"column":20,"nodeType":"123","messageId":"124","endLine":288,"endColumn":22},{"ruleId":"129","severity":1,"message":"130","line":328,"column":11,"nodeType":"131","endLine":332,"endColumn":13},{"ruleId":"129","severity":1,"message":"130","line":338,"column":17,"nodeType":"131","endLine":338,"endColumn":76},{"ruleId":"121","severity":1,"message":"122","line":383,"column":39,"nodeType":"123","messageId":"124","endLine":383,"endColumn":41},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'FunctionComponent' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Home' is defined but never used.","'transitions' is defined but never used.","'positions' is defined but never used.","'AlertProvider' is defined but never used.","'AlertTemplate' is defined but never used.","'FirstFunctionalComp' is defined but never used.","'useToasts' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'setTime' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used.","'FontAwesomeIcon' is defined but never used.","'useAlert' is defined but never used.","'answerNum' is assigned a value but never used.","'ownerFlag' is assigned a value but never used.","'setOwnerFlag' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]